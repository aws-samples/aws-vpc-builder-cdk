# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npx prettier --check **/**/*.ts
    - run: npm ci
    - run: npm run build --if-present
    # Run our test cases
    - run: npm test
    # Synthesize each of our sample configuration files to assure they continue to build templates
    - run: npm install -g cdk
    - run: cdk ls -c config=sample-central-egress.vpcBuilder.yaml
    - run: cdk ls -c config=sample-central-egress-inspected.vpcBuilder.yaml
    - run: cdk ls -c config=sample-central-ingress.vpcBuilder.yaml
    - run: cdk ls -c config=sample-central-ingress-inspected.vpcBuilder.yaml
    - run: cdk ls -c config=sample-complex.vpcBuilder.yaml
    - run: cdk ls -c config=sample-firewall-blog.vpcBuilder.yaml
    - run: cdk ls -c config=sample-vpc-endpoints.vpcBuilder.yaml
    - run: cdk ls -c config=sample-vpn-onprem.vpcBuilder.yaml
